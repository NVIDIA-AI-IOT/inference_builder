name: "rtdetr"

input:
- name: images
  data_type: TYPE_CUSTOM_BINARY_BASE64
  dims: [ -1 ]
  optional: false

- name: mime
  data_type: TYPE_STRING
  dims: [ -1 ]
  optional: false

output:
  - name: pred_logits
    data_type: TYPE_FP32
    dims: [ -1, -1, -1 ]
  - name: pred_boxes
    data_type: TYPE_FP32
    dims: [ -1, -1, -1 ]

server:
  endpoints:
    health:
      path: /health/live
    infer:
      path: /v1/infer
      requests:
        DetectionRequest: >
          {
            {% set image_items = request.input if request.input is iterable else [request.input] %}
            "images": [
              {% for item in image_items %}
                {{ item|replace('data:image\/[a-zA-Z0-9.+-]+;base64,', '')|tojson }}{% if not loop.last %}, {% endif %}
              {% endfor %}
            ],
            "mime": [
              {% for item in image_items %}
                {{ item|extract('data:([\w+/]+);base64,')|tojson }}{% if not loop.last %}, {% endif %}
              {% endfor %}
            ]
          }
      responses:
        DetectionResponse: >
          {
            "data": [{% for i1, i2 in response.pred_boxes | zip(response.pred_logits) %}{"index": {{loop.index0}}, "bboxes": {{ i1 }}, "probs": {{ i2 }} }{% if not loop.last %}, {% endif %}{% endfor %}],
            "usage": { "num_images": 1},
            "model": "nvidia/rtdetr",
            "object": "list"
          }

models:
- name: rtdetr
  backend: deepstream/nvinfer
  max_batch_size: 1
  input:
  - name: inputs
    data_type: TYPE_UINT8
    dims: [544, 960, 3]
  - name: mime
    data_type: TYPE_STRING
    dims: [ -1 ]
    optional: false
  output:
  - name: pred_logits
    data_type: TYPE_FP32
    dims: [ -1, -1 ]
  - name: pred_boxes
    data_type: TYPE_FP32
    dims: [ -1, -1 ]
  parameters:
    infer_config_path: config_nvinfer.txt