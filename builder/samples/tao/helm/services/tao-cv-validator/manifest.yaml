# Copyright (c) 2022-2023, NVIDIA CORPORATION.  All rights reserved.
#
# NVIDIA CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from NVIDIA CORPORATION is strictly prohibited.

type: msapplication
specVersion: 2.5.0
name: ucf.svc.tao-cv-validator
chartName: tao-cv-validator
description: my service description
version: 0.0.1
displayName: ""
category:
  functional: ""
  industry: ""
tags: []
keywords: []
nSpectId: NSPECT-0000-0000

publish: false

egress-endpoints:
  - name: tao-cv-nim
    description: tao-cv service API
    protocol: TCP # Or UDP
    scheme: http # Or grpc / rtsp / asyncio / ucx / none
    mandatory: True # Or False
    data-flow: in-out # Or in or out

params:
  modelName: rtdetr
  #> type: string
  #> enum_values: dino, classifier, segformer, rtdetr 
  #> description: Use TaskHead model name to categorize the models that have the same output layout

# tests:
#   - name: dev-params1
#     app: tests/dev/app.yaml
#     params: tests/dev/params1.yaml
#     ciTrigger: false
#     timeout: 10
#     duration: 10
#     installPreReqs: true  # Wether to install foundational services
#     namespace: default  # Kubernetes namespace
#     gpuNodeLabels: ""
#     watchAllPods: true # OR set to false and set list of pods to watch below
#     watchPods:
#     - <pod-name-regex>
#     testerPods:  # At least one tester pod is required
#     - name: testpod1  # Name of the test pod
#       startSignature: <START>  # Signature to look for in the logs indicating start of tests. Regex is accepted
#       endSignature: <END>  # Signature to look for in the logs indicating end of tests. Regex is accepted
#       errorSignatures:  # Signatures that indicate test failures.  Regex is accepted
#       - <REGEX1>
#       - <REGEX2>


---
spec:
  - name: validator-deployment
    type: ucf.k8s.app.deployment
    parameters:
      apptype: job

  - name: check-tao-cv-up
    type: ucf.k8s.initcontainer
    parameters:
      image: curlimages/curl:latest
      command: ['sh', '-c']
      args:
      - |
        while ! curl -s -f -o /dev/null http://$egress.tao-cv-nim.address:$egress.tao-cv-nim.port/v1/health/live; do
          echo "Waiting for tao-cv..."
          sleep 2
        done

  - name: "validator-container"
    type: ucf.k8s.container
    parameters:
      image:
        repository: gitlab-master.nvidia.com:5005/deepstreamsdk/inference-builder/cv-tao-validation
        tag: "61ba5e0a56fad97b865fa69f5c0f5ced2850398e"
      command: ["bash", "/opt/scripts/start.sh"]
      # command: ["sleep", "infinity"]
      env:
      - name: NIM_MODEL_NAME
        value: $params.modelName
      - name: TEST_HOST
        value: http://$egress.tao-cv-nim.address:$egress.tao-cv-nim.port

  - name: podSecurityContext
    type: ucf.k8s.podSecurityContext
    parameters:
      runAsGroup: 1000
      runAsUser: 1000

  - name: tao-cv-validator-service
    type: ucf.k8s.service
    parameters:
      ports:
      - port: 80 # <OUT_PORT>
        name: http-api
      #externalTrafficPolicy: # Cluster / Local. Allowed when service type is NodePort or LoadBalancer

  - name: ngc-image-pull-secret
    type: ucf.k8s.imagepullsecret
    parameters:
      name: ngc-docker-reg-secret
