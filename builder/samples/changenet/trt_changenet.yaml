name: "changenet"

input:
  - name: "reference_image"
    data_type: TYPE_CUSTOM_IMAGE_BASE64
    dims: [ -1 ]
    optional: false

  - name: "test_image"
    data_type: TYPE_CUSTOM_IMAGE_BASE64
    dims: [ -1 ]
    optional: false

output:
  - name: "output"
    data_type: TYPE_STRING
    dims: [ -1 ]

server:
  responders:
    infer:
      operation: inference
      requests:
        DetectionRequest: >
          {
            "reference_image": [{{ request.input[0]|replace('data:image\/[a-zA-Z0-9.+-]+;base64,', '')|tojson }}],
            "test_image": [{{ request.input[1]|replace('data:image\/[a-zA-Z0-9.+-]+;base64,', '')|tojson }}]
          }
      responses:
        DetectionResponse: >
          {
            "data": {{ response.output[0]|tojson }},
            "usage": { "num_images": 1},
            "model": "nvidia/changenet"
          }

models:
- name: trt_changenet
  backend: "triton/tensorrt"
  max_batch_size: 1
  parameters:
    FORCE_CPU_ONLY_INPUT_TENSORS: "no"
  input:
  - name: input0
    data_type: TYPE_FP32
    dims: [-1, 3, 768, 768]
  - name: input1
    data_type: TYPE_FP32
    dims: [-1, 3, 768, 768]
  output:
  - name: output_final
    data_type: TYPE_FP32
    dims: [ -1, 768, 768 ]
  - name: output0
    data_type: TYPE_FP32
    dims: [ -1, -1, -1 ]
  - name: output1
    data_type: TYPE_FP32
    dims: [ -1, -1, -1 ]
  - name: output2
    data_type: TYPE_FP32
    dims: [ -1, -1, -1 ]
  - name: output3
    data_type: TYPE_FP32
    dims: [ -1, -1, -1 ]
  preprocessors:
    - kind: "custom"
      name: "changenet-normalizer"
      input: ["reference_image", "test_image"]
      output: ["input0", "input1"]
      kwargs:
        out_size: [768, 768]
  postprocessors:
    - kind: "custom"
      name: "changenet-masking"
      input: ["output_final"]
      output: ["output_final"]
      config:
        network_size: [768, 768]
        n_class: 10

# route map
# A route is defined as <tensor source : tensor destination>
# Source and destination should be defined as <MODEL_NAME:["TENSOR_NAME1", "TENSOR_NAME2", ...]>
# Model name is optional, so <:["TENSOR_NAME1", "TENSOR_NAME2", ...]> is valid
# Tensor list is optional too and <my_model:> is valid
routes: {
  ':["reference_image", "test_image"]': 'trt_changenet',
  'trt_changenet:["output_final"]': ':["output"]',
}
