# nim-templates/.gitlab-ci.yml

# Define stages in order of execution
stages:
  - build-builder  # Only runs when build dependencies change
  - build-inference   # Generates tao.tgz package
  - build-docker      # Builds and pushes final NIM container

# Global variables used across jobs
variables:
  # GitLab's container registry URL for this project
  BUILDER_IMAGE: ${CI_REGISTRY_IMAGE}/builder:latest
  NIM_TAO_IMAGE: ${CI_REGISTRY_IMAGE}/nim-tao:${CI_COMMIT_SHA}
  # Cache pip packages between jobs
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Define when pipeline should run
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

# Build the builder image used for building inference package
# Only runs when requirements.txt or other build deps change
build_builder_image:
  stage: build-builder
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    # Build from root directory
    - docker build -t $BUILDER_IMAGE -f .Dockerfile.builder .
    - docker push $BUILDER_IMAGE
  rules:
    - changes:
        - requirements.txt
        - .Dockerfile.builder
      when: always

# Generate the inference package (tao.tgz)
build_tao_inference:
  stage: build-inference
  # Use our custom builder image that has all dependencies
  image: $BUILDER_IMAGE
  script:
    - python builder/main.py builder/samples/tao/ds_tao.yaml 
      --server-type fastapi
      -a builder/samples/tao/openapi.yaml
      -v builder/samples/tao/validation/rtdetr
      --no-docker
      -o builder/samples/tao
      -t
  artifacts:
    paths:
      - builder/samples/tao/tao.tgz
    expire_in: 1 week
  rules:
    - changes:
        - builder/samples/tao/**/*
        - builder/main.py
        - templates/**/*

# Build and push the final NIM container
build_tao_docker:
  stage: build-docker
  image: docker:24.0
  services:
    - docker:24.0-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  dependencies:
    - build_tao_inference
  script:
    # Login to GitLab container registry
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    # Build using docker compose
    - cd builder/samples
    # tao.tgz is copied in Dockerfile, no need to extract
    - docker compose build nim-tao
    # Tag and push to registry
    - docker tag nim-tao $NIM_TAO_IMAGE
    - docker push $NIM_TAO_IMAGE
  rules:
    - changes:
        - builder/samples/tao/**/*
        - builder/main.py
        - templates/**/*
# Cache pip packages between jobs
cache:
  paths:
    - .cache/pip
